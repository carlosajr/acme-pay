version: '3.8'

services:
  postgres:
    image: postgres
    container_name: acme-pay-postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=acme-pay
    volumes:
      - "./data/accounts/postgres:/var/lib/postgresql/data"
    ports:
      - 5433:5432
    networks:
      - acme-net

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: acme-pay-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
      - "rabbitmq_log:/var/log/rabbitmq"
    networks:
      - acme-net

  redis:
    image: redis:alpine
    container_name: acme-pay-redis
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/data"
    networks:
      - acme-net

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: acme-pay-zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - acme-net
    platform: linux/amd64  # Adicionado para garantir compatibilidade

  kafka:
    image: wurstmeister/kafka
    container_name: acme-pay-kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - acme-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: acme-pay-kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "acme-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    depends_on:
      - kafka
    networks:
      - acme-net

networks:
  acme-net:
    driver: bridge

volumes:
  rabbitmq_data:
    driver: local
  rabbitmq_log:
    driver: local
  redis_data:
    driver: local